package packws.cargaterritorio

import java.util.Date;
import java.util.List;
import java.util.Map;
import java.util.HashMap;

import java.io.File;

import org.springframework.batch.core.StepExecution;

import com.everis.util.FechaUtil;

import com.bbva.batch.util.DeciderParam;

global java.util.Map status

rule "101 Depuraci√≥n de archivos"
dialect "java" 
salience 101
no-loop true
when
    params: Map()
then
    String existStatus = "COMPLETED";
    org.apache.log4j.Logger logger = org.apache.log4j.Logger.getLogger(DeciderParam.class);
    logger.info("COMPLETED");
    
    try {
	    String rutaArchivo = params.get("PB_RUTA_ARCHIVO").toString();
	    String nombreArchivo = params.get("PB_NOMBRE_ARCHIVO").toString();
	    String formatoFechaSufijo = params.get("PB_FORMATO_FECHA_SUFIJO").toString();
	    String nroDiasEspera = params.get("PB_DIAS_ESPERA").toString();
	    
	    File directorio = new File(rutaArchivo);
	    String filenameSufix;
	    Integer diasEspera = Integer.parseInt(nroDiasEspera);
	    Date date;
	    Date hoy = new Date();
	    	
	    if(directorio.isDirectory()) {
	        for(File f : directorio.listFiles()) {
	            filenameSufix = f.getName().replaceAll(nombreArchivo, "");
	            date = FechaUtil.parseFecha(filenameSufix, formatoFechaSufijo);
	            if(date != null && FechaUtil.diff(date, hoy) <= diasEspera) {
	                if(!f.delete()) {
	                    logger.error("El archivo " + f.getName() + " no se pudo eliminar");
	                }
	            }
	        }
	    }
    } catch(Exception e) {
        ((StepExecution) status.get("execution")).addFailureException(e);
        existStatus = "FAILED";
    }

    status.put("status", existStatus);
end